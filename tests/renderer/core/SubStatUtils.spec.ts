import { rolls, roundFn } from '@renderer/core/entities/artefact/StatUtils';

const expected = {
  HP: new Set([209, 239, 269, 299, 418, 448, 478, 508, 538, 568, 598, 627, 657, 687, 717, 747, 777, 807, 837, 866, 896, 926, 956, 986, 1016, 1046, 1076, 1105, 1135, 1165, 1195, 1225, 1255, 1285, 1315, 1344, 1374, 1404, 1434, 1464, 1494, 1524, 1554, 1583, 1613, 1643, 1673, 1703, 1733, 1763, 1793]),
  'HP%': new Set([4.1, 4.7, 5.3, 5.8, 8.2, 8.7, 9.3, 9.9, 10.5, 11.1, 11.7, 12.2, 12.8, 13.4, 14.0, 14.6, 15.2, 15.7, 16.3, 15.8, 16.9, 17.5, 18.1, 18.7, 19.2, 19.8, 20.4, 21.0, 21.6, 18.6, 22.2, 22.7, 23.3, 23.9, 22.1, 24.5, 25.1, 25.7, 26.2, 26.8, 27.4, 25.6, 28.0, 26.3, 28.6, 29.2, 29.7, 29.1, 30.3, 30.9, 31.5, 32.1, 32.7, 33.2, 32.6, 33.8, 34.4, 35.0]),
  Atk: new Set([14, 16, 18, 19, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 89, 90, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117]),
  'Atk%': new Set([4.1, 4.7, 5.3, 5.8, 8.2, 8.7, 9.3, 9.9, 10.5, 11.1, 11.7, 12.2, 12.8, 13.4, 14.0, 14.6, 15.2, 15.7, 16.3, 15.8, 16.9, 17.5, 18.1, 18.7, 19.2, 19.8, 20.4, 21.0, 21.6, 18.6, 22.2, 22.7, 23.3, 23.9, 22.1, 24.5, 25.1, 25.7, 26.2, 26.8, 27.4, 25.6, 28.0, 26.3, 28.6, 29.2, 29.7, 29.1, 30.3, 30.9, 31.5, 32.1, 32.7, 33.2, 32.6, 33.8, 34.4, 35.0]),
  Def: new Set([16, 19, 21, 23, 32, 35, 37, 39, 42, 44, 46, 49, 51, 53, 56, 58, 60, 62, 63, 65, 67, 69, 72, 74, 76, 79, 81, 83, 86, 88, 90, 93, 95, 97, 100, 102, 104, 106, 109, 111, 113, 116, 118, 120, 123, 125, 127, 130, 132, 134, 137, 139]),
  'Def%': new Set([5.1, 5.8, 6.6, 7.3, 10.2, 10.9, 11.7, 12.4, 13.1, 13.9, 14.6, 15.3, 16.0, 16.8, 17.5, 18.2, 19.0, 18.9, 19.7, 20.4, 21.1, 21.9, 22.6, 23.3, 24.1, 24.8, 25.5, 26.2, 27.0, 27.7, 28.4, 29.2, 29.1, 29.9, 30.6, 31.3, 32.1, 32.8, 33.5, 34.3, 35.0, 35.7, 36.5, 34.2, 36.4, 37.2, 37.9, 38.6, 39.4, 40.1, 40.8, 41.6, 42.3, 43.0, 41.5, 43.7]),
  'CritRate%': new Set([2.7, 3.1, 3.5, 3.9, 5.4, 5.8, 6.2, 6.6, 7.0, 7.4, 7.8, 8.2, 8.6, 8.9, 9.3, 9.7, 10.1, 10.5, 10.9, 11.3, 11.7, 12.0, 12.1, 12.4, 12.8, 13.2, 13.6, 14.0, 14.4, 14.8, 15.2, 15.6, 15.9, 16.3, 16.7, 17.1, 17.5, 17.9, 18.3, 18.7, 19.1, 19.4, 19.8, 20.2, 20.6, 21.0, 19.0, 21.4, 21.8, 22.2, 22.6, 22.9, 23.3]),
  'CritDmg%': new Set([5.4, 6.2, 7.0, 7.8, 10.9, 11.7, 12.4, 13.2, 14.0, 14.8, 15.5, 16.3, 17.1, 17.9, 18.7, 19.4, 20.2, 21.0, 21.8, 22.5, 23.3, 24.1, 24.9, 25.6, 26.4, 25.7, 27.2, 28.0, 28.8, 28.7, 29.5, 30.3, 31.1, 31.9, 32.6, 33.4, 34.2, 35.0, 35.7, 36.5, 32.7, 35.8, 37.3, 34.9, 38.1, 38.9, 39.6, 40.4, 38.8, 41.2, 42.0, 42.7, 41.9, 43.5, 44.3, 45.1, 45.8, 46.6]),
  EM: new Set([16, 19, 21, 23, 33, 35, 37, 40, 42, 44, 47, 49, 51, 54, 56, 58, 61, 63, 65, 68, 70, 72, 75, 77, 79, 82, 84, 86, 89, 91, 93, 96, 98, 100, 103, 105, 107, 110, 112, 114, 117, 119, 121, 124, 126, 128, 131, 133, 135, 138, 140]),
  'ER%': new Set([4.5, 5.2, 5.8, 6.5, 9.1, 9.7, 10.4, 11.0, 11.7, 12.3, 13.0, 13.6, 14.2, 14.9, 15.5, 16.2, 16.8, 17.5, 18.1, 18.8, 19.4, 20.1, 20.7, 21.4, 22.0, 22.7, 23.3, 24.0, 24.6, 25.3, 25.9, 22.6, 23.9, 25.2, 26.6, 27.2, 27.9, 28.5, 29.2, 26.5, 29.1, 29.8, 30.5, 31.1, 31.7, 31.8, 32.4, 27.8, 30.4, 33.0, 33.7, 34.3, 35.0, 35.6, 36.3, 36.9, 37.6, 38.2, 38.9]),
};

describe('SubStatUtils module', () => {
  Object.keys(expected).forEach((key) => {
    test(`${key} rolls are valids`, () => {
      const actual = rolls(key).map(roundFn(key));
      expect(new Set(actual)).toEqual(expected[key]);
    });
  });
});
